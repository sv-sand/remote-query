
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)	
	ОбновитьТипыПараметров();		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)	
	ОбновитьТипыПараметров();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПараметры(Команда)
	ЗаполнитьПараметрыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПараметрыНаСервере()
	
	Если Объект.Вид = Перечисления.вз_ВидыВнешнихЗапросов.Запрос Тогда
		ПараметрыЗапроса = ПолучитьПараметрыЗапроса();		
		
	ИначеЕсли Объект.Вид = Перечисления.вз_ВидыВнешнихЗапросов.Код Тогда
		ПараметрыЗапроса = ПолучитьПараметрыИсполняемогоКода();			
	Иначе
		Возврат;	
	КонецЕсли;
		
	ДобавитьНовыеПараметры(ПараметрыЗапроса);
	УдалитьСтарыеПараметры(ПараметрыЗапроса);		
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область Служебный

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()

	Если Объект.Вид = ПредопределенноеЗначение("Перечисление.вз_ВидыВнешнихЗапросов.Запрос") Тогда
		Элементы.ПараметрыЗаполнитьПараметры.Видимость = Истина;
		Элементы.ТекстЗапроса.Видимость = Истина;
		Элементы.ИсполняемыйКод.Видимость = Ложь;
		
	ИначеЕсли Объект.Вид = ПредопределенноеЗначение("Перечисление.вз_ВидыВнешнихЗапросов.Код") Тогда
		Элементы.ПараметрыЗаполнитьПараметры.Видимость = Истина;
		Элементы.ТекстЗапроса.Видимость = Ложь;
		Элементы.ИсполняемыйКод.Видимость = Истина;
		
	Иначе
		Элементы.ПараметрыЗаполнитьПараметры.Видимость = Ложь;
		Элементы.ТекстЗапроса.Видимость = Ложь;
		Элементы.ИсполняемыйКод.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыЗапроса()
	
	Если НЕ ЗначениеЗаполнено(Объект.ТекстЗапроса) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Не заполнен текст запроса'"));
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос(Объект.ТекстЗапроса);
	Попытка
		ПараметрыЗапроса = Запрос.НайтиПараметры();
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось определить параметры запроса: '"); 
		ТекстСообщения = ТекстСообщения +  ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);		
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьПараметрыИсполняемогоКода()

	Текст = СтрЗаменить(Объект.ИсполняемыйКод, " ", "");	
	Текст = СтрЗаменить(Текст, Символы.ПС, "");	
	
	ПараметрыЗапроса = Новый ТаблицаЗначений;
	ПараметрыЗапроса.Колонки.Добавить("Имя");
	ПараметрыЗапроса.Колонки.Добавить("ТипЗначения");
	
	Признак = "Параметры.";
	Позиция = СтрНайти(Текст, Признак);
	Пока Позиция > 0 Цикл
		
		НачальнаяПозиция = Позиция + СтрДлина(Признак);		
		КонечнаяПозиция = ПервыйНеСтроковыйСимвол(Текст, НачальнаяПозиция);
		Позиция = СтрНайти(Текст, "Параметры.", , КонечнаяПозиция);
		
		ИмяПараметра = Сред(Текст, НачальнаяПозиция, КонечнаяПозиция - НачальнаяПозиция);
		Если НЕ ЗначениеЗаполнено(ИмяПараметра) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаПараметра = ПараметрыЗапроса.Добавить();
		СтрокаПараметра.Имя = СокрЛП(ИмяПараметра);		
		
	КонецЦикла;
	
	ПараметрыЗапроса.Свернуть("Имя, ТипЗначения");
	
	Возврат ПараметрыЗапроса;
	
КонецФункции

&НаСервере
Процедура ОбновитьТипыПараметров()
	
	Если Объект.Вид <> Перечисления.вз_ВидыВнешнихЗапросов.Запрос Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗапроса = ПолучитьПараметрыЗапроса();	
	Если ПараметрыЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Параметр Из ПараметрыЗапроса Цикл		                       
		Отбор = Новый Структура("Имя", Параметр.Имя);
		НайденныеСтроки = Объект.Параметры.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			Строка = НайденныеСтроки.Получить(0);
			Строка.Тип = Параметр.ТипЗначения;
		КонецЕсли;
	КонецЦикла;	
		
КонецПроцедуры

&НаСервере
Процедура ДобавитьНовыеПараметры(ПараметрыЗапроса)
	
	Если ПараметрыЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Параметр Из ПараметрыЗапроса Цикл		                       
		Отбор = Новый Структура("Имя", Параметр.Имя);
		НайденныеСтроки = Объект.Параметры.НайтиСтроки(Отбор);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Строка = Объект.Параметры.Добавить();
			Строка.Имя = Параметр.Имя;
			Строка.Внешний = Истина;
		Иначе
			Строка = НайденныеСтроки.Получить(0);
		КонецЕсли;		
		
		Строка.Тип = Параметр.ТипЗначения;
		Если Строка.Тип <> Неопределено Тогда
			Строка.Значение = Строка.Тип.ПривестиЗначение(Строка.Значение);	
		КонецЕсли;		
	КонецЦикла;	
		
КонецПроцедуры

&НаСервере
Процедура УдалитьСтарыеПараметры(ПараметрыЗапроса)
	
	Если ПараметрыЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиКУдалению = Новый Массив;
	
	Для каждого Строка Из Объект.Параметры Цикл
		Параметр = ПараметрыЗапроса.Найти(Строка.Имя);	
		Если Параметр = Неопределено Тогда
			СтрокиКУдалению.Добавить(Строка);	
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Строка Из СтрокиКУдалению Цикл
		Объект.Параметры.Удалить(Строка);	
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПервыйНеСтроковыйСимвол(Текст, НачальнаяПозиция)

	Алфавит = 
	"АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдеёжзийклмнопрстуфхцчшщъыьэюя
	|ABCDEFGHIJKLMNOPQRSTUVWXYZzyxwvutsrqponmlkjihgfedcba
	|1234567890";
	
	Позиция = НачальнаяПозиция;
	Пока СтрНайти(Алфавит, Сред(Текст, Позиция, 1)) > 0 Цикл
		Позиция = Позиция + 1;		
	КонецЦикла;
	
	Возврат Позиция;
	
КонецФункции

#КонецОбласти